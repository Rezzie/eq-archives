<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Let the Rest of Us Play!</title>
</head>

<body background="../eqxpics/parchment.jpg">

<center><a href="iss35.htm"><img src="../eqxpics/eqx.gif" border=0 width=595 height=73 alt="EverQuest Express"></a>
<table width="595">
<tr><td><b>ISSUE # 35</b></td><td align="right"><b>August 15th - August 21st</b></td></tr>
</table>
</center>

<hr size="2" noshade color="black">
<br>
<center><big><b>Let the Rest of Us Play!</big></center></b>
<p style="text-align: justify">

	
	I am writing this article as someone who has not received the most sacred NDA as a plea to those who have been lucky to get one. It is my hope that this game is the best it can possibly be, and of course, the sooner things get tested, the sooner I can play the game. Many people have the attitude that game companies put on these beta tests more for the gamer than the actual game quality. That these tests are some kind of publicity stunt, to give some people a preview of the greatness yet to come, and leave others with their tongues hanging on the floor, wanting a taste for themselves. And while this may happen as a result of a beta test, it is by no means a purpose of one. Since I would like to play this game as quickly as possible, I will share some of my meager testing knowledge with you.
<br><br>
	Recently I have begun work at a major game company as a Quality Assurance Tester. This means I test games for a living. Unfortunately for me, I begin testing games in their pre-alpha stage when they have many more major problems than a beta game. However, the principals in testing remain the same. The programmers need people from the "outside" to test the games. While it might seem that the programmer would be the best qualified to test it, actually he is the last person in the world who should be testing his work. There are several reasons for this, and they all have to do with people's perception, and sense of reality.
<br><br>
	Many of the "bugs" in the program are not errors of code, meaning they are not clearly seen in missing pixels, infinite loops, or program crashes. A large majority of bugs are errors in program or code design. The programmer may not see these bugs, because he completely understands how his program was designed, and cannot easily step outside of that view. If something is designed poorly for the user, it is definitely an error in that program. If you think an interface is designed clumsy for the user or anything else is designed wrong, go ahead and say so.  If a user calls technical support one time, the company has lost all of the profit they made on that game. That's how much it costs to run these companies.
<br><br>
	Another problem is that the programmer often has Real World constraints on his work, making it so that he needs to get it finished by some time. He will have the marketing team, and the producers hurrying him to get the product finished. Also, they may have to ship the product at a certain time for it to even make any money. Suppose they are working on a baseball game called "Mark McGwire's Home Run Chase '98". They had better get this game out before the baseball season is over; or else only their hardcore fans will buy it. In that case, it might be a good idea to even ship an empty box and put it on the shelf on time, with a voucher in it saying they will send the person the game when it's done. For those reasons a programmer wants his product to succeed, and might overlook some minor bugs (maybe only subconsciously) or speed through the testing process. It's the tester's job to delay shipping if they don't think it is complete. For this reason, programmers don't necessarily like testers that much.
<br><br>
	A tester needs to be a destructive force on the program. What is a successful test of a program? One in which you find no errors? Nope. A test is successful when you do find errors. That is the goal you are trying to achieve. The programmer has spent so much time being creative, it is nearly impossible for him to completely shift his perspective and think destructively.  When testing the program you must be trying to "break the game". You don't want to do well, and if the programmers tell you they have a bug free program; don't believe it. Do the unexpected, and beyond. If you can't go somewhere, find a way to get there. If it says you can't do something, try to do it anyway. Multitask while playing, if the game crashes because of something you do, it is still a bug. You shouldn't be allowed to do anything that will cause an error.
<br><br>
	989 Studios has their own QA department, and I'm sure they have been working hard to find all of the bugs that they can for you. However, we invariably miss errors, even major errors in every program. This is what the beta test is for. I for one will be upset if there are errors in the final release because of testers that treat the beat test as only a game. And people, I'm anxious to play myself, so lets get Norrath moving as quickly as possible.

	
<br><br>



<em>&nbsp;&nbsp;&nbsp;&nbsp;Article by <b><a href="../credits/jagang.htm">Jagang Doomseeker</a></b></em>
</p>

</body>
</html>
